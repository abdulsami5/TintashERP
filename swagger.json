{
    "swagger": "2.0",
    "info": {
        "description": "Tintash ERP APIs",
        "version": "1.0.0",
        "title": "Tintash ERP",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "apiteam@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "127.0.0.1:8000/api",
    "basePath": "/",
    "tags": [
        {
            "name": "loghours",
            "description": "Everything about logging your hours",
            "externalDocs": {
            }
        },
        {
            "name": "project",
            "description": "project app apis"
        },
        {
            "name": "project_management",
            "description": "Operations about project management",
            "externalDocs": {
            }
        }
    ],
    "schemes": [
        "http"
    ],
    "paths": {
        "/loghours": {
            "post": {
                "tags": [
                    "loghours"
                ],
                "summary": "Add a new loghour",
                "description": "",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "loghour object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/loghour"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "get": {
                "tags":[
                    "loghours"
                ],
                "summary": "get loghours",
                "description": "get all loghours or based on user or based in project loghour",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "project_loghour_id",
                        "in": "query",
                        "description": "id of project loghour whose log hours are requested",
                        "type": "integer",
                        "format": "int32"
                    },{
                        "name": "user_id",
                        "in": "query",
                        "description": "id of user  whose log hours are requested",
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/loghour"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }

            }
        },
        "/projectloghours": {
            "get": {
                "tags": [
                    "loghours"
                ],
                "summary": "get project's loghours",
                "description": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "project_id",
                        "description": "id of project whose log hours are required",
                        "required": true
                    },
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid status value"
                    },
                    "404": {
                        "description": "Project not found"
                    }
                }
            },
            "post":{
                "tags": [
                    "loghours"
                ],
                "summary": "Add a new project loghour",
                "description": "",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "lproject oghour object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/projectloghour"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }

            }
        },
        "/unapprovedhour": {
            "get": {
                "tags": [
                    "loghours"
                ],
                "summary": "Get all unapproved log hours",
                "description": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                {
                        "in": "header",
                        "name": "Authorization",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/projectloghour"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/project": {
            "post": {
                "tags": [
                    "project"
                ],
                "summary": "Add a new project",
                "description": "",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "project object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/project"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "get": {
                "tags":[
                    "project"
                ],
                "summary": "get projects",
                "description": "get all projects or by providing its id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "query",
                        "description": "id of project which is requested",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/loghour"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }

            }
        },
        "/activeprojects": {
            "get": {
                "tags":[
                    "project"
                ],
                "summary": "get active projects",
                "description": "get all currenty active projects",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/project"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }

            }
        },
        "/user_projects": {
            "get": {
                "tags":[
                    "project_management"
                ],
                "summary": "get user's user_project object",
                "description": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user_project"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }

            }
        },
        "/employee_project_request": {
            "post": {
                "tags": [
                    "project_management"
                ],
                "summary": "Add a new request by user to be added/removed on project",
                "description": "",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "project object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_project_request"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/employee_requests_all": {
            "get": {
                "tags":[
                    "project_management"
                ],
                "summary": "get all request of the employee",
                "description": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user_project_request"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }

            }
        },
        "/request_response": {
            "post": {
                "tags": [
                    "project_management"
                ],
                "summary": "Add a new request by user to be added/removed on project",
                "description": "",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "request's response that needs to be accepted/rejected",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request_response"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Record not found"
                    },
                    "400":{
                        "description": "correct parameters not found or parameter missing"
                    },
                    "204":{
                        "description": "No Content"
                    }
                }
            }
        },
        "/all_pending_project_requests": {
            "get": {
                "tags":[
                    "project_management"
                ],
                "summary": "get all request of the employee",
                "description": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "project_id",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user_project_request"
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found"
                    },
                    "200":{
                        "description": "OK"
                    }
                }

            }
        },
        "/accept_log_hours": {
            "get": {
                "tags":[
                    "project_management"
                ],
                "summary": "accept weekly loghours",
                "description": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "project_log_id",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400":{
                        "description": "correct parameters not found or parameter missing"
                    }
                }

            }
        }
    },

    "securityDefinitions": {
        "petstore_auth": {
            "type": "oauth2",
            "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
            "flow": "implicit",
            "scopes": {
                "write:pets": "modify pets in your account",
                "read:pets": "read your pets"
            }
        },
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        }
    },
    "definitions": {
        "loghour": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date"
                },
                "hours_logged": {
                    "type": "number",
                    "format": "float"
                },
                "required_hours": {
                    "type": "number",
                    "format": "float"
                },
                "pm_approval": {
                    "type": "boolean"
                },
                "am_approval": {
                    "type": "boolean"
                },
                "hourly_rate": {
                    "type": "number",
                    "format": "float"
                },
                "is_valid": {
                    "type": "boolean"
                },
                "employee": {
                    "type": "integer",
                    "format": "int32"
                },
                "project_loghour": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "projectloghour": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date"
                },
                "pm_approval": {
                    "type": "boolean"
                },
                "am_approval": {
                    "type": "boolean"
                },
                "project": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "project": {
            "type": "object",
            "properties": {
                "start_date": {
                    "type": "string",
                    "format": "date"
                },
                "end_date": {
                    "type": "string",
                    "format": "date"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "manager": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "user_project": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "project": {
                    "type": "integer",
                    "format": "int32"
                },
                "employee": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "user_project_request": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "request_type": {
                    "type": "string"
                },
                "project": {
                    "type": "integer",
                    "format": "int32"
                },
                "employee": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "request_response": {
            "type": "object",
            "properties": {
                "request_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "response": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}
